{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ander Shi\\\\Desktop\\\\4130_proj\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport * as d3 from 'd3';\nimport React, { useEffect } from 'react';\nimport ScatterPlot from './components/ScatterPlot';\nimport { cluster, filter } from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  var clusterMaker = require('clusters');\n  function useFirstRender() {\n    _s();\n    const firstRender = React.useRef(true);\n    useEffect(() => {\n      firstRender.current = false;\n    }, []);\n    return firstRender.current;\n  }\n  _s(useFirstRender, \"ATSdOeWIj8DnzpAvwLTk08ZcQSw=\");\n  const firstRender = useFirstRender();\n  var [dataset, setDataset] = React.useState(1);\n  var [tmpdata, settmpData] = React.useState([]);\n  var [data, setData] = React.useState([]);\n  var [n_clus, set_n_clus] = React.useState(3);\n  var [n_iters, set_n_iters] = React.useState(1000);\n  var clusters = [];\n  var processed = [];\n  var [update_t, setupdatet] = React.useState(-1);\n  var [radius, setRadius] = React.useState(6);\n  var [status, setStatus] = React.useState(0);\n  React.useEffect(() => {\n    loadData();\n    if (!(firstRender || tmpdata == [])) {\n      processData();\n    }\n  }, [firstRender, dataset]);\n  const loadData = () => {\n    if (dataset == 1) {\n      // data adapted from CSC3020\n      d3.csv('./generatedData.csv').then(_data => {\n        settmpData(_data.map(d => {\n          d.width = +d.width;\n          d.length = +d.length;\n          return [d.length, d.width];\n        }));\n      });\n    } else if (dataset == 2) {\n      // data adapted from figshare\n      d3.csv('./kmeans_blobs.csv').then(_data => {\n        settmpData(_data.map(d => {\n          d.x = +d.x;\n          d.y = +d.y;\n          return [d.x, d.y];\n        }));\n      });\n    } else if (dataset == 3) {\n      // data randomly generated\n      d3.csv('./randomdata.csv').then(_data => {\n        settmpData(_data.map(d => {\n          d.x = +d.x;\n          d.y = +d.y;\n          return [d.x, d.y];\n        }));\n      });\n    }\n  };\n  const processData = () => {\n    clusterMaker.k(n_clus);\n    clusterMaker.iterations(n_iters);\n    clusterMaker.data(tmpdata);\n    clusters = clusterMaker.clusters();\n    for (var i = 0; i < clusters.length; i++) {\n      for (var j = 0; j < clusters[i].points.length; j++) {\n        var tmp = {\n          \"length\": clusters[i].points[j][0],\n          \"width\": clusters[i].points[j][1],\n          \"cluster\": i\n        };\n        processed.push(tmp);\n      }\n    }\n    setData(processed);\n  };\n  React.useEffect(() => {\n    if (!(firstRender || tmpdata == [])) {\n      processData();\n    }\n  }, [update_t, tmpdata]);\n  const updateparam = () => {\n    var C = document.getElementById(\"n_clusters\");\n    var I = document.getElementById(\"n_iters\");\n    set_n_clus(C.value);\n    set_n_iters(I.value);\n    setupdatet(-1 * update_t);\n  };\n  const updateRadius = () => {\n    var R = document.getElementById(\"radius\");\n    setRadius(R.value);\n  };\n  const updateDataset = () => {\n    var D = document.getElementById(\"dataset\");\n    setDataset(D.value);\n  };\n  const updateSelectStatus = () => {\n    setStatus(0);\n    console.log(status);\n  };\n  const updateDragStatus = () => {\n    setStatus(1);\n    console.log(status);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"head\",\n      children: \" CSC4130 Project \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(ScatterPlot, {\n        config: radius,\n        radius: radius,\n        data: data,\n        updateData: settmpData,\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      id: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Number of clusters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"n_clusters\",\n        max: \"10\",\n        min: \"2\",\n        value: n_clus,\n        onChange: updateparam\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 113\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Number of iterations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"n_iters\",\n        value: n_iters,\n        onChange: updateparam\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 94\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Circle radius\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"radius\",\n        max: \"10\",\n        min: \"2\",\n        value: radius,\n        onChange: updateRadius\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 110\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Dataset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"dataset\",\n        onChange: updateDataset,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"Linear-like Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"Blob-like Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"Random Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"dataset\",\n        onChange: updateDataset,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"Linear-like Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"Blob-like Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"Random Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n_s2(App, \"hL54IAVBqofJqg/U1r+Y4d4ySXc=\", false, function () {\n  return [useFirstRender];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","d3","React","useEffect","ScatterPlot","cluster","filter","App","clusterMaker","require","useFirstRender","firstRender","useRef","current","dataset","setDataset","useState","tmpdata","settmpData","data","setData","n_clus","set_n_clus","n_iters","set_n_iters","clusters","processed","update_t","setupdatet","radius","setRadius","status","setStatus","loadData","processData","csv","then","_data","map","d","width","length","x","y","k","iterations","i","j","points","tmp","push","updateparam","C","document","getElementById","I","value","updateRadius","R","updateDataset","D","updateSelectStatus","console","log","updateDragStatus"],"sources":["C:/Users/Ander Shi/Desktop/4130_proj/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport * as d3 from 'd3';\nimport React, { useEffect } from 'react';\nimport ScatterPlot from './components/ScatterPlot';\nimport { cluster, filter } from 'd3';\n\n\nfunction App() {\n\n    var clusterMaker = require('clusters');\n\n    function useFirstRender() {\n        const firstRender= React.useRef(true);\n\n        useEffect(() => {\n            firstRender.current = false;\n        }, []);\n\n        return firstRender.current;\n    } \n\n    const firstRender = useFirstRender();\n\n    var [dataset, setDataset] = React.useState(1);\n    var [tmpdata, settmpData] = React.useState([]);\n    var [data, setData] = React.useState([]);\n    var [n_clus, set_n_clus] = React.useState(3);\n    var [n_iters, set_n_iters] = React.useState(1000);\n    var clusters = [];\n    var processed = [];\n    var [update_t, setupdatet] = React.useState(-1);\n    var [radius, setRadius] = React.useState(6)\n    var [status, setStatus] = React.useState(0)\n\n    \n    React.useEffect(() => {\n        loadData();\n        if (!(firstRender || tmpdata == [])) {\n            processData();\n        }\n    },[firstRender, dataset])\n\n    const loadData = () => {\n        if (dataset == 1) {\n            // data adapted from CSC3020\n            d3.csv('./generatedData.csv') \n            .then(_data => {\n                settmpData(_data.map(d => {\n                    d.width = +d.width;\n                    d.length = +d.length;   \n                    return [d.length, d.width]\n                }));\n            })\n        }\n        else if (dataset == 2) {\n            // data adapted from figshare\n            d3.csv('./kmeans_blobs.csv') \n            .then(_data => {\n                settmpData(_data.map(d => {\n                    d.x = +d.x;\n                    d.y = +d.y;   \n                    return [d.x, d.y]\n                }));\n            })\n        }\n        else if (dataset == 3) {\n            // data randomly generated\n            d3.csv('./randomdata.csv') \n            .then(_data => {\n                settmpData(_data.map(d => {\n                    d.x = +d.x;\n                    d.y = +d.y;   \n                    return [d.x, d.y]\n                }));\n            })\n        }\n    }\n\n    const processData = () => {\n        clusterMaker.k(n_clus);\n        clusterMaker.iterations(n_iters);\n        clusterMaker.data(tmpdata)\n        clusters = clusterMaker.clusters()\n        for (var i=0; i<clusters.length; i++){\n            for (var j=0; j<clusters[i].points.length;j++){\n                var tmp = {\n                    \"length\": clusters[i].points[j][0],\n                    \"width\": clusters[i].points[j][1],\n                    \"cluster\": i\n                }\n                processed.push(tmp)\n            }\n        }\n        setData(processed);\n    }\n\n        \n    React.useEffect(() => {\n        if (!(firstRender || tmpdata == [])) {\n            processData();\n        }\n    },[update_t, tmpdata])\n\n    const updateparam = () => {\n        var C = document.getElementById(\"n_clusters\")\n        var I = document.getElementById(\"n_iters\")\n        set_n_clus(C.value)\n        set_n_iters(I.value)\n        setupdatet(-1*update_t)\n    }\n\n    const updateRadius = () => {\n        var R = document.getElementById(\"radius\")\n        setRadius(R.value);\n    }\n\n    const updateDataset = () => {\n        var D = document.getElementById(\"dataset\")\n        setDataset(D.value);\n    }\n\n    const updateSelectStatus = () => {\n        setStatus(0)\n        console.log(status)\n    }\n\n    const updateDragStatus = () => {\n        setStatus(1)\n        console.log(status)\n    }\n\n    return (\n        <div className='Container'>\n        <h1 className='head'> CSC4130 Project </h1>\n        <div className=\"App\">\n        <ScatterPlot config={radius} radius={radius} data={data} updateData={settmpData} status={status}/>\n        </div>\n        <div className=\"input\" id=\"dashboard\">\n            <label>Number of clusters</label>\n            <input type='number' id=\"n_clusters\" max=\"10\" min=\"2\" value={n_clus} onChange={updateparam}></input><br></br>\n            <label>Number of iterations</label>\n            <input type='number' id=\"n_iters\" value={n_iters} onChange={updateparam}></input><br></br>\n            <label>Circle radius</label>\n            <input type='number' id=\"radius\" max=\"10\" min=\"2\" value={radius} onChange={updateRadius}></input><br></br>\n            <label>Dataset</label>\n            <select id=\"dataset\" onChange={updateDataset}>\n                <option value=\"1\">Linear-like Data</option>\n                <option value=\"2\">Blob-like Data</option>\n                <option value=\"3\">Random Data</option>\n            </select><br></br>\n            <select id=\"dataset\" onChange={updateDataset}>\n                <option value=\"1\">Linear-like Data</option>\n                <option value=\"2\">Blob-like Data</option>\n                <option value=\"3\">Random Data</option>\n            </select><br></br>\n        </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}