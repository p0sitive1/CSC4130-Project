{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ander Shi\\\\Desktop\\\\4130_proj\\\\src\\\\components\\\\ScatterPlot.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport * as d3 from 'd3';\nimport { cluster } from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScatterPlot = _ref => {\n  _s();\n  let {\n    config: {\n      containerWidth,\n      containerHeight,\n      margin,\n      tooltipPadding\n    },\n    data\n  } = _ref;\n  const svgRef = React.useRef();\n  const chart = React.useRef();\n  const xAxisG = React.useRef();\n  const yAxisG = React.useRef();\n  const bars = React.useRef();\n\n  // These calculated intermidiate data should be\n  // cleaned up to React-styled code.\n  // that is, to combine all below refs and the \"initialized\" state into a single state\n  const _colorScale = React.useRef();\n  const width = React.useRef();\n  const height = React.useRef();\n  const xScale = React.useRef();\n  const yScale = React.useRef();\n  const xAxis = React.useRef();\n  const yAxis = React.useRef();\n  const _containerWidth = React.useRef();\n  const _containerHeight = React.useRef();\n  const [initialized, setInitialized] = React.useState(false);\n  const _tooltipPadding = React.useRef();\n  const _margin = React.useRef();\n  const colors = ['#a0a1e2', '#6495ed', '#04ea17'];\n  React.useEffect(() => {\n    initVis();\n  }, []);\n  React.useEffect(() => {\n    if (initialized) {\n      updateVis();\n    }\n  }, [data]);\n  const initVis = () => {\n    let svg = d3.select(svgRef.current);\n    _tooltipPadding.current = tooltipPadding || 15;\n    _containerWidth.current = containerWidth || 500;\n    _containerHeight.current = containerHeight || 300;\n    svg.attr('width', _containerWidth.current).attr('height', _containerHeight.current);\n    _margin.current = margin || {\n      top: 25,\n      right: 20,\n      bottom: 20,\n      left: 40\n    };\n    width.current = _containerWidth.current - _margin.current.left - _margin.current.right;\n    height.current = _containerHeight.current - _margin.current.top - _margin.current.bottom;\n    xScale.current = d3.scaleLinear().range([0, width.current]);\n    yScale.current = d3.scaleLinear().range([height.current, 0]);\n    xAxis.current = d3.axisBottom(xScale.current).ticks(6).tickSize(-height.current - 10).tickPadding(10);\n    yAxis.current = d3.axisLeft(yScale.current).ticks(6).tickSize(-width.current - 10).tickPadding(10);\n    chart.current = svg.append('g').attr('transform', `translate(${_margin.current.left},${_margin.current.top})`);\n    xAxisG.current = chart.current.append('g').attr('class', 'axis x-axis').attr('transform', `translate(0,${height.current})`);\n    yAxisG.current = chart.current.append('g').attr('class', 'axis y-axis');\n    svg.append('text').attr('class', 'axis-title').attr('x', 0).attr('y', 0).attr('dy', '.71em').text('Length');\n    svg.append('text').attr('class', 'axis-title').attr('x', width.current - 10).attr('y', height.current + 10).attr('dy', '.71em').text('Width');\n    _colorScale.current = d3.scaleOrdinal().range(['#a0a1e2', '#6495ed', '#04ea17']).domain(['Easy', 'Intermediate', 'Difficult']);\n    setInitialized(true);\n  };\n  const updateVis = () => {\n    let colorValue = d => d.cluster;\n    let xValue = d => d.length;\n    let yValue = d => d.width;\n    xScale.current.domain([0, d3.max(data, xValue)]);\n    yScale.current.domain([0, d3.max(data, yValue)]);\n\n    // renderVis()\n    bars.current = chart.current.selectAll('.point').data(data, d => d.trail).join('circle').attr('class', 'point').attr('r', 4).attr('cy', d => yScale.current(yValue(d))).attr('cx', d => xScale.current(xValue(d))).attr('fill', d => colors[colorValue(d)]).on('mouseover', (event, d) => {\n      d3.select('#tooltip').style('display', 'block').style('left', event.pageX + _tooltipPadding.current + 'px').style('top', event.pageY + _tooltipPadding.current + 'px').html(`\n                <div class=\"tooltip-title\">${d.trail}</div>\n                <div><i>${d.region}</i></div>\n                <ul>\n                <li>${d.distance} km, ~${d.time} hours</li>\n                <li>${d.difficulty}</li>\n                <li>${d.season}</li>\n                </ul>\n            `);\n    }).on('mouseleave', () => {\n      d3.select('#tooltip').style('display', 'none');\n    });\n    xAxisG.current.call(xAxis.current);\n    yAxisG.current.call(yAxis.current);\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n_s(ScatterPlot, \"rBPpqIPKAuU72v1EqkdioXltSwY=\");\n_c = ScatterPlot;\nexport default ScatterPlot;\nvar _c;\n$RefreshReg$(_c, \"ScatterPlot\");","map":{"version":3,"names":["React","d3","cluster","ScatterPlot","config","containerWidth","containerHeight","margin","tooltipPadding","data","svgRef","useRef","chart","xAxisG","yAxisG","bars","_colorScale","width","height","xScale","yScale","xAxis","yAxis","_containerWidth","_containerHeight","initialized","setInitialized","useState","_tooltipPadding","_margin","colors","useEffect","initVis","updateVis","svg","select","current","attr","top","right","bottom","left","scaleLinear","range","axisBottom","ticks","tickSize","tickPadding","axisLeft","append","text","scaleOrdinal","domain","colorValue","d","xValue","length","yValue","max","selectAll","trail","join","on","event","style","pageX","pageY","html","region","distance","time","difficulty","season","call"],"sources":["C:/Users/Ander Shi/Desktop/4130_proj/src/components/ScatterPlot.js"],"sourcesContent":["import React from 'react';\r\nimport * as d3 from 'd3';\r\nimport { cluster } from 'd3';\r\n\r\nconst ScatterPlot = ({\r\n    config:{\r\n        containerWidth,\r\n        containerHeight,\r\n        margin,\r\n        tooltipPadding,\r\n    },\r\n    data\r\n}) => {\r\n\r\n    const svgRef = React.useRef();\r\n\r\n    const chart = React.useRef();\r\n    const xAxisG = React.useRef();\r\n    const yAxisG = React.useRef();\r\n    const bars = React.useRef();\r\n\r\n    // These calculated intermidiate data should be\r\n    // cleaned up to React-styled code.\r\n    // that is, to combine all below refs and the \"initialized\" state into a single state\r\n    const _colorScale = React.useRef();\r\n    const width = React.useRef();\r\n    const height = React.useRef();\r\n    const xScale = React.useRef();\r\n    const yScale = React.useRef();\r\n    const xAxis = React.useRef();\r\n    const yAxis = React.useRef();\r\n    const _containerWidth = React.useRef();\r\n    const _containerHeight = React.useRef();\r\n    const [ initialized, setInitialized ] = React.useState(false)\r\n    const _tooltipPadding = React.useRef()\r\n    \r\n    const _margin = React.useRef();\r\n\r\n    const colors = ['#a0a1e2', '#6495ed', '#04ea17']\r\n\r\n    React.useEffect(() =>{\r\n        initVis();\r\n    }, [])\r\n    \r\n    React.useEffect(() => {\r\n        if (initialized) {\r\n            updateVis();\r\n        }\r\n    }, [data])    \r\n\r\n    const initVis = () => {\r\n        let svg = d3.select(svgRef.current);\r\n        _tooltipPadding.current = tooltipPadding || 15\r\n        _containerWidth.current = containerWidth || 500;\r\n        _containerHeight.current =  containerHeight || 300;\r\n        svg.attr('width', _containerWidth.current).attr('height', _containerHeight.current);\r\n        _margin.current = margin || {top: 25, right: 20, bottom: 20, left: 40};\r\n        width.current = _containerWidth.current - _margin.current.left - _margin.current.right;\r\n        height.current = _containerHeight.current - _margin.current.top - _margin.current.bottom;\r\n        \r\n        xScale.current = d3.scaleLinear().range([0, width.current]);\r\n        yScale.current = d3.scaleLinear().range([height.current, 0]);\r\n\r\n        xAxis.current = d3.axisBottom(xScale.current)\r\n            .ticks(6)\r\n            .tickSize(-height.current - 10)\r\n            .tickPadding(10)\r\n        yAxis.current = d3.axisLeft(yScale.current)\r\n            .ticks(6)\r\n            .tickSize(-width.current - 10)\r\n            .tickPadding(10);\r\n        \r\n        chart.current = svg.append('g').attr('transform', `translate(${_margin.current.left},${_margin.current.top})`);\r\n        xAxisG.current = chart.current.append('g').attr('class', 'axis x-axis').attr('transform', `translate(0,${height.current})`);\r\n        yAxisG.current = chart.current.append('g').attr('class', 'axis y-axis');\r\n        svg.append('text').attr('class', 'axis-title').attr('x', 0).attr('y', 0).attr('dy', '.71em').text('Length');\r\n        svg.append('text').attr('class', 'axis-title').attr('x', width.current-10).attr('y',height.current+10).attr('dy', '.71em').text('Width');\r\n\r\n        _colorScale.current = d3.scaleOrdinal()\r\n            .range(['#a0a1e2', '#6495ed', '#04ea17']) \r\n            .domain(['Easy','Intermediate','Difficult']);\r\n\r\n        setInitialized(true);\r\n    }\r\n\r\n    const updateVis = () => {\r\n\r\n        let colorValue = d => d.cluster;\r\n        let xValue = d => d.length;\r\n        let yValue = d => d.width;\r\n\r\n        xScale.current.domain([0, d3.max(data, xValue)]);\r\n        yScale.current.domain([0, d3.max(data, yValue)]);\r\n\r\n        // renderVis()\r\n        bars.current = chart.current.selectAll('.point')\r\n        .data(data, d => d.trail)\r\n        .join('circle')\r\n        .attr('class', 'point')\r\n        .attr('r', 4)\r\n        .attr('cy', d => yScale.current(yValue(d)))\r\n        .attr('cx', d => xScale.current(xValue(d)))\r\n        .attr('fill', d => colors[(colorValue(d))])\r\n        .on('mouseover', (event,d) => {\r\n            d3.select('#tooltip')\r\n            .style('display', 'block')\r\n            .style('left', (event.pageX + _tooltipPadding.current) + 'px')   \r\n            .style('top', (event.pageY + _tooltipPadding.current) + 'px')\r\n            .html(`\r\n                <div class=\"tooltip-title\">${d.trail}</div>\r\n                <div><i>${d.region}</i></div>\r\n                <ul>\r\n                <li>${d.distance} km, ~${d.time} hours</li>\r\n                <li>${d.difficulty}</li>\r\n                <li>${d.season}</li>\r\n                </ul>\r\n            `);\r\n        })\r\n        .on('mouseleave', () => {\r\n            d3.select('#tooltip').style('display', 'none');\r\n        });\r\n\r\n        xAxisG.current.call(xAxis.current);\r\n        yAxisG.current.call(yAxis.current);\r\n    }\r\n\r\n    return (\r\n        <svg ref={svgRef}></svg>\r\n    );\r\n}\r\n\r\nexport default ScatterPlot;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}