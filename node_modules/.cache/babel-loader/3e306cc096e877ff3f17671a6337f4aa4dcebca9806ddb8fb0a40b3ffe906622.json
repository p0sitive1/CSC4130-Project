{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ander Shi\\\\Desktop\\\\Assignment 4\\\\Assignment 4\\\\src\\\\components\\\\BarChart.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport * as d3 from 'd3';\nimport { svg } from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = _ref => {\n  _s();\n  let {\n    config: {\n      colorScale,\n      containerWidth,\n      containerHeight,\n      margin\n    },\n    data,\n    setFilterCategory\n  } = _ref;\n  const svgRef = React.useRef();\n  const chart = React.useRef();\n  const xAxisG = React.useRef();\n  const yAxisG = React.useRef();\n  const bars = React.useRef();\n\n  // These calculated intermidiate data should be\n  // cleaned up to React-styled code.\n  // that is, to combine all below refs and the \"initialized\" state into a single state\n  const _colorScale = React.useRef();\n  const width = React.useRef();\n  const height = React.useRef();\n  const xScale = React.useRef();\n  const yScale = React.useRef();\n  const xAxis = React.useRef();\n  const yAxis = React.useRef();\n  const _containerWidth = React.useRef();\n  const _containerHeight = React.useRef();\n  const [initialized, setInitialized] = React.useState(false);\n\n  // Cannot dynamically change. If dynamically chaning is needed, these code can be modified.\n\n  const _margin = React.useRef();\n  const orderedKeys = ['Easy', 'Intermediate', 'Difficult'];\n\n  // Intialize the bar plot (5pts)\n\n  // To DO\n\n  React.useEffect(() => {\n    initVis();\n  }, []);\n\n  // Update rendering result (5pts)\n\n  // To DO\n\n  React.useEffect(() => {\n    if (initialized) {\n      updateVis();\n    }\n  }, [data]);\n  const initVis = () => {\n    let svg = d3.select(svgRef.current);\n    _containerWidth.current = containerWidth || 260;\n    _containerHeight.current = containerHeight || 300;\n    svg.attr('width', _containerWidth.current).attr('height', _containerHeight.current);\n    _margin.current = margin || {\n      top: 25,\n      right: 20,\n      bottom: 20,\n      left: 40\n    };\n    width.current = _containerWidth.current - _margin.current.left - _margin.current.right;\n    height.current = _containerHeight.current - _margin.current.top - _margin.current.bottom;\n    xScale.current = d3.scaleBand().range([0, width.current]).paddingInner(0.2);\n    yScale.current = d3.scaleLinear().range([height.current, 0]);\n    xAxis.current = d3.axisBottom(xScale.current).ticks(['Easy', 'Intermediate', 'Difficult']).tickSizeOuter(0);\n    yAxis.current = d3.axisLeft(yScale.current).ticks(6).tickSizeOuter(0);\n    chart.current = svg.append('g').attr('transform', `translate(${_margin.current.left},${_margin.current.top})`);\n    xAxisG.current = chart.current.append('g').attr('class', 'axis x-axis').attr('transform', `translate(0,${height.current})`);\n    yAxisG.current = chart.current.append('g').attr('class', 'axis y-axis');\n    svg.append('text').attr('class', 'axis-title').attr('x', 0).attr('y', 0).attr('dy', '.71em').text('Trails');\n    _colorScale.current = d3.scaleOrdinal().range(['#a0a1e2', '#6495ed', '#04ea17']) // light green to dark green\n    .domain(['Easy', 'Intermediate', 'Difficult']);\n    setInitialized(true);\n  };\n  const updateVis = () => {\n    const aggregatedDataMap = d3.rollups(data, v => v.length, d => d.difficulty);\n    let aggregatedData = Array.from(aggregatedDataMap, _ref2 => {\n      let [key, count] = _ref2;\n      return {\n        key,\n        count\n      };\n    });\n    aggregatedData = aggregatedData.sort((a, b) => {\n      return orderedKeys.indexOf(a.key) - orderedKeys.indexOf(b.key);\n    });\n    let colorValue = d => d.key;\n    let xValue = d => d.key;\n    let yValue = d => d.count;\n    xScale.current.domain(aggregatedData.map(xValue));\n    yScale.current.domain([0, d3.max(aggregatedData, yValue)]);\n\n    // renderVis()\n    bars.current = chart.current.selectAll('.bar').data(aggregatedData, xValue).join('rect').attr('class', 'bar').attr('x', d => xScale.current(xValue(d))).attr('width', xScale.current.bandwidth()).attr('height', d => height.current - yScale.current(yValue(d))).attr('y', d => yScale.current(yValue(d))).attr('fill', d => _colorScale.current(colorValue(d))).on('click', function (event, d) {\n      // Check if current category is active and toggle class (5pts)\n\n      // To DO\n      console.log(d.key);\n\n      // Get the names of all active/filtered categories (10pts)\n\n      // To DO\n      svg.selectAll();\n\n      // Change parent node's React State with the selected category names (5pts)\n\n      // To DO\n    });\n\n    xAxisG.current.call(xAxis.current);\n    yAxisG.current.call(yAxis.current);\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n};\n_s(BarChart, \"W9fjD2nTgDXaNCAn93gG9DGrJtk=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","d3","svg","BarChart","config","colorScale","containerWidth","containerHeight","margin","data","setFilterCategory","svgRef","useRef","chart","xAxisG","yAxisG","bars","_colorScale","width","height","xScale","yScale","xAxis","yAxis","_containerWidth","_containerHeight","initialized","setInitialized","useState","_margin","orderedKeys","useEffect","initVis","updateVis","select","current","attr","top","right","bottom","left","scaleBand","range","paddingInner","scaleLinear","axisBottom","ticks","tickSizeOuter","axisLeft","append","text","scaleOrdinal","domain","aggregatedDataMap","rollups","v","length","d","difficulty","aggregatedData","Array","from","key","count","sort","a","b","indexOf","colorValue","xValue","yValue","map","max","selectAll","join","bandwidth","on","event","console","log","call"],"sources":["C:/Users/Ander Shi/Desktop/Assignment 4/Assignment 4/src/components/BarChart.js"],"sourcesContent":["import React from 'react';\r\nimport * as d3 from 'd3';\r\nimport { svg } from 'd3';\r\n\r\nconst BarChart = ({\r\n    config:{\r\n        colorScale,\r\n        containerWidth,\r\n        containerHeight,\r\n        margin\r\n    },\r\n    data,\r\n    setFilterCategory,\r\n}) => {\r\n\r\n    const svgRef = React.useRef();\r\n\r\n    const chart = React.useRef();\r\n    const xAxisG = React.useRef();\r\n    const yAxisG = React.useRef();\r\n    const bars = React.useRef();\r\n\r\n    // These calculated intermidiate data should be\r\n    // cleaned up to React-styled code.\r\n    // that is, to combine all below refs and the \"initialized\" state into a single state\r\n    const _colorScale = React.useRef();\r\n    const width = React.useRef();\r\n    const height = React.useRef();\r\n    const xScale = React.useRef();\r\n    const yScale = React.useRef();\r\n    const xAxis = React.useRef();\r\n    const yAxis = React.useRef();\r\n    const _containerWidth = React.useRef();\r\n    const _containerHeight = React.useRef();\r\n    const [ initialized, setInitialized ] = React.useState(false)\r\n\r\n    // Cannot dynamically change. If dynamically chaning is needed, these code can be modified.\r\n    \r\n    const _margin = React.useRef();\r\n\r\n    const orderedKeys = ['Easy', 'Intermediate', 'Difficult'];\r\n\r\n    // Intialize the bar plot (5pts)\r\n\r\n    // To DO\r\n\r\n    React.useEffect(() =>{\r\n        initVis();\r\n    }, [])\r\n\r\n    // Update rendering result (5pts)\r\n\r\n    // To DO\r\n\r\n    React.useEffect(() => {\r\n        if (initialized) {\r\n            updateVis();\r\n        }        \r\n    }, [data])    \r\n\r\n    const initVis = () => {\r\n        let svg = d3.select(svgRef.current);\r\n        _containerWidth.current = containerWidth || 260;\r\n        _containerHeight.current =  containerHeight || 300;\r\n        svg.attr('width', _containerWidth.current).attr('height', _containerHeight.current);\r\n        _margin.current = margin || {top: 25, right: 20, bottom: 20, left: 40};\r\n        width.current = _containerWidth.current - _margin.current.left - _margin.current.right;\r\n        height.current = _containerHeight.current - _margin.current.top - _margin.current.bottom;\r\n        xScale.current = d3.scaleBand().range([0, width.current]).paddingInner(0.2);\r\n        yScale.current = d3.scaleLinear().range([height.current, 0]);\r\n        xAxis.current = d3.axisBottom(xScale.current).ticks(['Easy', 'Intermediate', 'Difficult']).tickSizeOuter(0);\r\n        yAxis.current = d3.axisLeft(yScale.current).ticks(6).tickSizeOuter(0);\r\n        chart.current = svg.append('g').attr('transform', `translate(${_margin.current.left},${_margin.current.top})`);\r\n        xAxisG.current = chart.current.append('g').attr('class', 'axis x-axis').attr('transform', `translate(0,${height.current})`);\r\n        yAxisG.current = chart.current.append('g').attr('class', 'axis y-axis');\r\n        svg.append('text').attr('class', 'axis-title').attr('x', 0).attr('y', 0).attr('dy', '.71em').text('Trails');\r\n\r\n        _colorScale.current = d3.scaleOrdinal()\r\n            .range(['#a0a1e2', '#6495ed', '#04ea17']) // light green to dark green\r\n            .domain(['Easy','Intermediate','Difficult']);\r\n\r\n        setInitialized(true);\r\n    }\r\n\r\n    const updateVis = () => {\r\n        const aggregatedDataMap = d3.rollups(data, v => v.length, d => d.difficulty);\r\n        let aggregatedData = Array.from(aggregatedDataMap, ([key, count]) => ({ key, count }));\r\n        aggregatedData = aggregatedData.sort((a,b) => {\r\n            return orderedKeys.indexOf(a.key) - orderedKeys.indexOf(b.key);\r\n        });\r\n        let colorValue = d => d.key;\r\n        let xValue = d => d.key;\r\n        let yValue = d => d.count;\r\n\r\n        xScale.current.domain(aggregatedData.map(xValue))\r\n        yScale.current.domain([0, d3.max(aggregatedData, yValue)]);\r\n\r\n\r\n        // renderVis()\r\n        bars.current = chart.current.selectAll('.bar')\r\n        .data(aggregatedData, xValue)\r\n        .join('rect')\r\n        .attr('class', 'bar')\r\n        .attr('x', d => xScale.current(xValue(d)))\r\n        .attr('width', xScale.current.bandwidth())\r\n        .attr('height', d => height.current - yScale.current(yValue(d)))\r\n        .attr('y', d => yScale.current(yValue(d)))\r\n        .attr('fill', d => _colorScale.current(colorValue(d)))\r\n        .on('click', function(event, d) {\r\n            // Check if current category is active and toggle class (5pts)\r\n\r\n            // To DO\r\n            console.log(d.key)\r\n            \r\n            // Get the names of all active/filtered categories (10pts)\r\n\r\n            // To DO\r\n            svg.selectAll()\r\n           \r\n            // Change parent node's React State with the selected category names (5pts)\r\n\r\n            // To DO\r\n            \r\n        });\r\n\r\n        xAxisG.current.call(xAxis.current);\r\n        yAxisG.current.call(yAxis.current);\r\n    }\r\n\r\n    return (\r\n        <svg ref={svgRef}></svg>\r\n    );\r\n}\r\n\r\nexport default BarChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}