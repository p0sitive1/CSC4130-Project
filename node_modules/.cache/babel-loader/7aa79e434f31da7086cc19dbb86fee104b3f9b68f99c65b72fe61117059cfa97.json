{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ander Shi\\\\Desktop\\\\Assignment 4\\\\Assignment 4\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport BarChart from './components/BarChart';\nimport * as d3 from 'd3';\nimport React from 'react';\nimport ScatterPlot from './components/ScatterPlot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Create three states, i.e., data, selectedData, and filterCategory\n\n  // To DO\n\n  var [data, setData] = React.useState({});\n  var [selectedData, setSelectedData] = React.useState({});\n  var [filterCategory, setFilterCategory] = React.useState({});\n  const colorScale = d3.scaleOrdinal().range(['#d3eecd', '#7bc77e', '#2a8d46']).domain(['Easy', 'Intermediate', 'Difficult']);\n  React.useEffect(() => {\n    loadData();\n    console.log(\"data loaded\");\n  }, []);\n  const loadData = () => {\n    d3.csv('./vancouver_trails.csv').then(_data => {\n      setData(_data.map(d => {\n        d.time = +d.time;\n        d.distance = +d.distance;\n        return d;\n      }));\n    });\n  };\n\n  // Use useEffect to render and update visual results when dependency/dependencies change (30pts)\n\n  // To DO\n\n  React.useEffect(() => {}, [filterCategory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"head\",\n      children: \" Multiple-View Interaction \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ScatterPlot, {\n        config: colorScale,\n        data: selectedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n        config: colorScale,\n        data: data,\n        setFilterCategory: setFilterCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"HjsrkyOnogdLF7pJqN4zwMqN9Oc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","BarChart","d3","React","ScatterPlot","App","data","setData","useState","selectedData","setSelectedData","filterCategory","setFilterCategory","colorScale","scaleOrdinal","range","domain","useEffect","loadData","console","log","csv","then","_data","map","d","time","distance"],"sources":["C:/Users/Ander Shi/Desktop/Assignment 4/Assignment 4/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport BarChart from './components/BarChart';\nimport * as d3 from 'd3';\nimport React from 'react';\nimport ScatterPlot from './components/ScatterPlot';\n\n\nfunction App() {\n\n    // Create three states, i.e., data, selectedData, and filterCategory\n\n    // To DO\n\n    var [data, setData] = React.useState({});\n    var [selectedData, setSelectedData] = React.useState({});\n    var [filterCategory, setFilterCategory] = React.useState({});\n\n    \n    const colorScale = d3.scaleOrdinal()\n        .range(['#d3eecd', '#7bc77e', '#2a8d46']) \n        .domain(['Easy','Intermediate','Difficult']);\n\n    React.useEffect(()=>{\n        loadData();\n        console.log(\"data loaded\");\n    },[])\n\n    const loadData = () => {\n        d3.csv('./vancouver_trails.csv') \n        .then(_data => {\n            setData(_data.map(d => {\n                d.time = +d.time;\n                d.distance = +d.distance;\n                return d\n            }));\n        })\n    }\n\n\n    // Use useEffect to render and update visual results when dependency/dependencies change (30pts)\n\n    // To DO\n\n    React.useEffect(() => {\n\n    }, [filterCategory])\n\n    return (\n        <div className='Container'>\n        <h1 className='head'> Multiple-View Interaction </h1>\n        <div className=\"App\">\n        <ScatterPlot config={colorScale} data = {selectedData}/>\n        <BarChart config={colorScale} data = {data} setFilterCategory={setFilterCategory}/>\n        </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,0BAA0B;AAAC;AAGnD,SAASC,GAAG,GAAG;EAAA;EAEX;;EAEA;;EAEA,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,IAAI,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,IAAI,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;EAG5D,MAAMK,UAAU,GAAGX,EAAE,CAACY,YAAY,EAAE,CAC/BC,KAAK,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CACxCC,MAAM,CAAC,CAAC,MAAM,EAAC,cAAc,EAAC,WAAW,CAAC,CAAC;EAEhDb,KAAK,CAACc,SAAS,CAAC,MAAI;IAChBC,QAAQ,EAAE;IACVC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC9B,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMF,QAAQ,GAAG,MAAM;IACnBhB,EAAE,CAACmB,GAAG,CAAC,wBAAwB,CAAC,CAC/BC,IAAI,CAACC,KAAK,IAAI;MACXhB,OAAO,CAACgB,KAAK,CAACC,GAAG,CAACC,CAAC,IAAI;QACnBA,CAAC,CAACC,IAAI,GAAG,CAACD,CAAC,CAACC,IAAI;QAChBD,CAAC,CAACE,QAAQ,GAAG,CAACF,CAAC,CAACE,QAAQ;QACxB,OAAOF,CAAC;MACZ,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;EACN,CAAC;;EAGD;;EAEA;;EAEAtB,KAAK,CAACc,SAAS,CAAC,MAAM,CAEtB,CAAC,EAAE,CAACN,cAAc,CAAC,CAAC;EAEpB,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,wBAC1B;MAAI,SAAS,EAAC,MAAM;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiC,eACrD;MAAK,SAAS,EAAC,KAAK;MAAA,wBACpB,QAAC,WAAW;QAAC,MAAM,EAAEE,UAAW;QAAC,IAAI,EAAIJ;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE,eACxD,QAAC,QAAQ;QAAC,MAAM,EAAEI,UAAW;QAAC,IAAI,EAAIP,IAAK;QAAC,iBAAiB,EAAEM;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7E;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEd;AAAC,GAjDQP,GAAG;AAAA,KAAHA,GAAG;AAmDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}