{"ast":null,"code":"'use strict';\n\nmodule.exports = {\n  data: getterSetter([], function (arrayOfArrays) {\n    var n = arrayOfArrays[0].length;\n    return arrayOfArrays.map(function (array) {\n      return array.length == n;\n    }).reduce(function (boolA, boolB) {\n      return boolA & boolB;\n    }, true);\n  }),\n  clusters: function () {\n    var pointsAndCentroids = kmeans(this.data(), {\n      k: this.k(),\n      iterations: this.iterations()\n    });\n    var points = pointsAndCentroids.points;\n    var centroids = pointsAndCentroids.centroids;\n    return centroids.map(function (centroid) {\n      return {\n        centroid: centroid.location(),\n        points: points.filter(function (point) {\n          return point.label() == centroid.label();\n        }).map(function (point) {\n          return point.location();\n        })\n      };\n    });\n  },\n  k: getterSetter(undefined, function (value) {\n    return value % 1 == 0 & value > 0;\n  }),\n  iterations: getterSetter(Math.pow(10, 3), function (value) {\n    return value % 1 == 0 & value > 0;\n  })\n};\nfunction kmeans(data, config) {\n  // default k\n  var k = config.k || Math.round(Math.sqrt(data.length / 2));\n  var iterations = config.iterations;\n\n  // initialize point objects with data\n  var points = data.map(function (vector) {\n    return new Point(vector);\n  });\n\n  // intialize centroids randomly\n  var centroids = [];\n  for (var i = 0; i < k; i++) {\n    centroids.push(new Centroid(points[i % points.length].location(), i));\n  }\n  ;\n\n  // update labels and centroid locations until convergence\n  for (var iter = 0; iter < iterations; iter++) {\n    points.forEach(function (point) {\n      point.updateLabel(centroids);\n    });\n    centroids.forEach(function (centroid) {\n      centroid.updateLocation(points);\n    });\n  }\n  ;\n\n  // return points and centroids\n  return {\n    points: points,\n    centroids: centroids\n  };\n}\n;\n\n// objects\nfunction Point(location) {\n  var self = this;\n  this.location = getterSetter(location);\n  this.label = getterSetter();\n  this.updateLabel = function (centroids) {\n    var distancesSquared = centroids.map(function (centroid) {\n      return sumOfSquareDiffs(self.location(), centroid.location());\n    });\n    self.label(mindex(distancesSquared));\n  };\n}\n;\nfunction Centroid(initialLocation, label) {\n  var self = this;\n  this.location = getterSetter(initialLocation);\n  this.label = getterSetter(label);\n  this.updateLocation = function (points) {\n    var pointsWithThisCentroid = points.filter(function (point) {\n      return point.label() == self.label();\n    });\n    if (pointsWithThisCentroid.length > 0) self.location(averageLocation(pointsWithThisCentroid));\n  };\n}\n;\n\n// convenience functions\nfunction getterSetter(initialValue, validator) {\n  var thingToGetSet = initialValue;\n  var isValid = validator || function (val) {\n    return true;\n  };\n  return function (newValue) {\n    if (typeof newValue === 'undefined') return thingToGetSet;\n    if (isValid(newValue)) thingToGetSet = newValue;\n  };\n}\n;\nfunction sumOfSquareDiffs(oneVector, anotherVector) {\n  var squareDiffs = oneVector.map(function (component, i) {\n    return Math.pow(component - anotherVector[i], 2);\n  });\n  return squareDiffs.reduce(function (a, b) {\n    return a + b;\n  }, 0);\n}\n;\nfunction mindex(array) {\n  var min = array.reduce(function (a, b) {\n    return Math.min(a, b);\n  });\n  return array.indexOf(min);\n}\n;\nfunction sumVectors(a, b) {\n  return a.map(function (val, i) {\n    return val + b[i];\n  });\n}\n;\nfunction averageLocation(points) {\n  var zeroVector = points[0].location().map(function () {\n    return 0;\n  });\n  var locations = points.map(function (point) {\n    return point.location();\n  });\n  var vectorSum = locations.reduce(function (a, b) {\n    return sumVectors(a, b);\n  }, zeroVector);\n  return vectorSum.map(function (val) {\n    return val / points.length;\n  });\n}\n;","map":{"version":3,"names":["module","exports","data","getterSetter","arrayOfArrays","n","length","map","array","reduce","boolA","boolB","clusters","pointsAndCentroids","kmeans","k","iterations","points","centroids","centroid","location","filter","point","label","undefined","value","Math","pow","config","round","sqrt","vector","Point","i","push","Centroid","iter","forEach","updateLabel","updateLocation","self","distancesSquared","sumOfSquareDiffs","mindex","initialLocation","pointsWithThisCentroid","averageLocation","initialValue","validator","thingToGetSet","isValid","val","newValue","oneVector","anotherVector","squareDiffs","component","a","b","min","indexOf","sumVectors","zeroVector","locations","vectorSum"],"sources":["C:/Users/Ander Shi/Desktop/4130_proj/clusters/clusters.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = {\r\n\r\n  data: getterSetter([], function(arrayOfArrays) {\r\n    var n = arrayOfArrays[0].length;\r\n    return (arrayOfArrays.map(function(array) {\r\n      return array.length == n;\r\n    }).reduce(function(boolA, boolB) { return (boolA & boolB) }, true));\r\n  }),\r\n\r\n  clusters: function() {\r\n    var pointsAndCentroids = kmeans(this.data(), {k: this.k(), iterations: this.iterations() });\r\n    var points = pointsAndCentroids.points;\r\n    var centroids = pointsAndCentroids.centroids;\r\n\r\n    return centroids.map(function(centroid) {\r\n      return {\r\n        centroid: centroid.location(),\r\n        points: points.filter(function(point) { return point.label() == centroid.label() }).map(function(point) { return point.location() }),\r\n      };\r\n    });\r\n  },\r\n\r\n  k: getterSetter(undefined, function(value) { return ((value % 1 == 0) & (value > 0)) }),\r\n\r\n  iterations: getterSetter(Math.pow(10, 3), function(value) { return ((value % 1 == 0) & (value > 0)) }),\r\n\r\n};\r\n\r\nfunction kmeans(data, config) {\r\n  // default k\r\n  var k = config.k || Math.round(Math.sqrt(data.length / 2));\r\n  var iterations = config.iterations;\r\n\r\n  // initialize point objects with data\r\n  var points = data.map(function(vector) { return new Point(vector) });\r\n\r\n  // intialize centroids randomly\r\n  var centroids = [];\r\n  for (var i = 0; i < k; i++) {\r\n    centroids.push(new Centroid(points[i % points.length].location(), i));\r\n  };\r\n\r\n  // update labels and centroid locations until convergence\r\n  for (var iter = 0; iter < iterations; iter++) {\r\n    points.forEach(function(point) { point.updateLabel(centroids) });\r\n    centroids.forEach(function(centroid) { centroid.updateLocation(points) });\r\n  };\r\n\r\n  // return points and centroids\r\n  return {\r\n    points: points,\r\n    centroids: centroids\r\n  };\r\n\r\n};\r\n\r\n// objects\r\nfunction Point(location) {\r\n  var self = this;\r\n  this.location = getterSetter(location);\r\n  this.label = getterSetter();\r\n  this.updateLabel = function(centroids) {\r\n    var distancesSquared = centroids.map(function(centroid) {\r\n      return sumOfSquareDiffs(self.location(), centroid.location());\r\n    });\r\n    self.label(mindex(distancesSquared));\r\n  };\r\n};\r\n\r\nfunction Centroid(initialLocation, label) {\r\n  var self = this;\r\n  this.location = getterSetter(initialLocation);\r\n  this.label = getterSetter(label);\r\n  this.updateLocation = function(points) {\r\n    var pointsWithThisCentroid = points.filter(function(point) { return point.label() == self.label() });\r\n    if (pointsWithThisCentroid.length > 0) self.location(averageLocation(pointsWithThisCentroid));\r\n  };\r\n};\r\n\r\n// convenience functions\r\nfunction getterSetter(initialValue, validator) {\r\n  var thingToGetSet = initialValue;\r\n  var isValid = validator || function(val) { return true };\r\n  return function(newValue) {\r\n    if (typeof newValue === 'undefined') return thingToGetSet;\r\n    if (isValid(newValue)) thingToGetSet = newValue;\r\n  };\r\n};\r\n\r\nfunction sumOfSquareDiffs(oneVector, anotherVector) {\r\n  var squareDiffs = oneVector.map(function(component, i) {\r\n    return Math.pow(component - anotherVector[i], 2);\r\n  });\r\n  return squareDiffs.reduce(function(a, b) { return a + b }, 0);\r\n};\r\n\r\nfunction mindex(array) {\r\n  var min = array.reduce(function(a, b) {\r\n    return Math.min(a, b);\r\n  });\r\n  return array.indexOf(min);\r\n};\r\n\r\nfunction sumVectors(a, b) {\r\n  return a.map(function(val, i) { return val + b[i] });\r\n};\r\n\r\nfunction averageLocation(points) {\r\n  var zeroVector = points[0].location().map(function() { return 0 });\r\n  var locations = points.map(function(point) { return point.location() });\r\n  var vectorSum = locations.reduce(function(a, b) { return sumVectors(a, b) }, zeroVector);\r\n  return vectorSum.map(function(val) { return val / points.length });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}