{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ander Shi\\\\Desktop\\\\4130_proj\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport BarChart from './components/BarChart';\nimport * as d3 from 'd3';\nimport React from 'react';\nimport ScatterPlot from './components/ScatterPlot';\nimport { filter } from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var clusterMaker = require('clusters');\n  clusterMaker.k(3);\n  clusterMaker.iterations(1000);\n  clusterMaker.data([[1, 0], [0, 1], [0, 0], [-10, 10], [-9, 11], [10, 10], [11, 12]]);\n  console.log(clusterMaker.clusters());\n  var [data, setData] = React.useState([]);\n  var [selectedData, setSelectedData] = React.useState(data);\n  var [filterCategory, setFilterCategory] = React.useState(['Easy', 'Intermediate', 'Difficult']);\n  const colorScale = d3.scaleOrdinal().range(['#d3eecd', '#7bc77e', '#2a8d46']).domain(['Easy', 'Intermediate', 'Difficult']);\n  React.useEffect(() => {\n    loadData();\n  }, []);\n  const loadData = () => {\n    d3.csv('./generatedData.csv').then(_data => {\n      setData(_data.map(d => {\n        d.Width = +d.Width;\n        d.Length = +d.Length;\n        return [d.Length, d.Width];\n      }));\n    });\n  };\n  console.log(data);\n  React.useEffect(() => {\n    clusterMaker.data(data);\n  }, []);\n  console.log(clusterMaker.clusters());\n  // Use useEffect to render and update visual results when dependency/dependencies change (30pts)\n\n  // To DO\n\n  React.useEffect(() => {\n    updateData();\n  }, [data]);\n  const updateData = () => {\n    if (data.filter(d => filterCategory.includes(d.difficulty)) != selectedData) {\n      setSelectedData(data.filter(d => filterCategory.includes(d.difficulty)));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"head\",\n      children: \" Multiple-View Interaction \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ScatterPlot, {\n        config: colorScale,\n        data: selectedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n        config: colorScale,\n        data: data,\n        setFilterCategory: setFilterCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"53dEIkCD+fD2DrIV3z96VHTauWc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","BarChart","d3","React","ScatterPlot","filter","App","clusterMaker","require","k","iterations","data","console","log","clusters","setData","useState","selectedData","setSelectedData","filterCategory","setFilterCategory","colorScale","scaleOrdinal","range","domain","useEffect","loadData","csv","then","_data","map","d","Width","Length","updateData","includes","difficulty"],"sources":["C:/Users/Ander Shi/Desktop/4130_proj/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport BarChart from './components/BarChart';\nimport * as d3 from 'd3';\nimport React from 'react';\nimport ScatterPlot from './components/ScatterPlot';\nimport { filter } from 'd3';\n\n\nfunction App() {\n\n    var clusterMaker = require('clusters');\n    clusterMaker.k(3);\n    clusterMaker.iterations(1000);\n    clusterMaker.data([[1, 0], [0, 1], [0, 0], [-10, 10], [-9, 11], [10, 10], [11, 12]]);\n\n    console.log(clusterMaker.clusters());\n\n    var [data, setData] = React.useState([]);\n    var [selectedData, setSelectedData] = React.useState(data);\n    var [filterCategory, setFilterCategory] = React.useState(['Easy', 'Intermediate', 'Difficult']);\n\n    \n    const colorScale = d3.scaleOrdinal()\n        .range(['#d3eecd', '#7bc77e', '#2a8d46']) \n        .domain(['Easy','Intermediate','Difficult']);\n\n    React.useEffect(()=>{\n        loadData();\n    },[])\n\n    const loadData = () => {\n        d3.csv('./generatedData.csv') \n        .then(_data => {\n            setData(_data.map(d => {\n                d.Width = +d.Width;\n                d.Length = +d.Length;   \n                return [d.Length, d.Width]\n            }));\n        })\n    }\n\n    console.log(data)\n    React.useEffect(()=>{\n        clusterMaker.data(data);\n    }, [])\n    \n    console.log(clusterMaker.clusters());\n    // Use useEffect to render and update visual results when dependency/dependencies change (30pts)\n\n    // To DO\n\n    React.useEffect(() => {\n        updateData();\n    }, [data])\n\n    const updateData = () => {\n        if (data.filter(d => filterCategory.includes(d.difficulty)) != selectedData){\n            setSelectedData(data.filter(d => filterCategory.includes(d.difficulty)))\n        }\n    }\n\n    return (\n        <div className='Container'>\n        <h1 className='head'> Multiple-View Interaction </h1>\n        <div className=\"App\">\n        <ScatterPlot config={colorScale} data = {selectedData}/>\n        <BarChart config={colorScale} data = {data} setFilterCategory={setFilterCategory}/>\n        </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}